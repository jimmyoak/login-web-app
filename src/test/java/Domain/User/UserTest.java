package test.java.Domain.User;

import junit.framework.TestCase;
import main.java.Domain.User.Password;
import main.java.Domain.User.Role;
import main.java.Domain.User.RolePermission;
import main.java.Domain.User.User;
import org.junit.Test;

import java.util.HashSet;

public class UserTest extends TestCase {
    public static final String USERNAME = "Jimmy K. Oak";
    public static final String ANOTHER_USERNAME = "Adri√°n Robles Maiz";
    public static final String USER_ROLE_NAME = "basic";
    public static final String EDIT_ROLE_PERMISSION = "edit";
    public static final String VIEW_ROLE_PERMISSION = "view";
    private User user;
    private Password userPassword;
    private Role userRole;

    @Override
    protected void setUp() throws Exception {
        userPassword = Password.createFromUncrypted("12345");
        HashSet<RolePermission> permissions = new HashSet<>();
        permissions.add(new RolePermission(EDIT_ROLE_PERMISSION));
        userRole = new Role(USER_ROLE_NAME, permissions);

        user = new User(USERNAME, userPassword, userRole);
    }

    public void testShouldHaveAnAutoGeneratedUniqueId() {
        assertNotSame(user.getId(), new User(ANOTHER_USERNAME, userPassword, userRole).getId());
    }

    public void testUserGetters() {
        assertSame(USERNAME, user.getUsername());
        assertSame(userPassword, user.getPassword());
    }

    public void testGetRoleNameFromUser() {
        assertSame(userRole.getName(), user.getRoleName());
    }

    public void testShouldValidatePermission() {
        assertTrue(user.hasPermission(new RolePermission(EDIT_ROLE_PERMISSION)));
        assertFalse(user.hasPermission(new RolePermission(VIEW_ROLE_PERMISSION)));
    }
}
